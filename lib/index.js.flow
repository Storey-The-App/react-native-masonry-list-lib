/**
 * Flowtype definitions for index
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.15.0
 */

import {
  RefreshControlProps,
  ScrollView,
  ScrollViewProps,
  StyleProp,
  ViewStyle,
} from "react-native";
import React, { MutableRefObject, ReactElement } from "react";
declare type Props<T> = {
  innerRef?: MutableRefObject<ScrollView | void>,
  keyPrefix?: string,
  loading?: boolean,
  refreshing?: $PropertyType<RefreshControlProps, "refreshing">,
  onRefresh?: $PropertyType<RefreshControlProps, "onRefresh">,
  onEndReached?: () => void,
  onEndReachedThreshold?: number,
  style?: StyleProp<ViewStyle>,
  data: T[],
  renderItem: (x: {
    item: any,
    i: any,
    ...
  }) => ReactElement,
  LoadingView?: React.ComponentType<any> | React.ReactElement | null,
  ListHeaderComponent?: React.ComponentType<any> | React.ReactElement | null,
  ListEmptyComponent?: React.ComponentType<any> | React.ReactElement | null,
  ListFooterComponent?: React.ComponentType<any> | React.ReactElement | null,
  numColumns?: number,
  ...
} & $Diff<ScrollViewProps, { refreshControl: any, onScroll: any }>;
declare function MasonryList<T>(props: Props<T>): ReactElement;
declare var _default: React.MemoExoticComponent<typeof MasonryList>;
declare export default typeof _default;
